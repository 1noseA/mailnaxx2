<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mailnaxx2.mapper.UsersMapper">

    <!-- ログイン -->
    <select id="findLoginUser" resultMap="userMap">
        SELECT
            u.user_id,
            u.user_number,
            u.user_name,
			a.affiliation_id,
            u.role_class,
            u.sales_flg,
            u.password,
            u.last_login_date
        FROM
            users u
		INNER JOIN affiliations a
            ON u.affiliation_id = a.affiliation_id
        WHERE
            user_number = #{userNumber}
    </select>

    <!-- ログイン失敗回数更新 -->
    <update id="loginFailure">
        UPDATE users SET
            failure_count = failure_count + 1
        WHERE user_number = #{userNumber}
    </update>

    <!-- ログイン成功時更新 -->
    <update id="loginSuccess">
        UPDATE users SET
            last_login_date = CURRENT_TIMESTAMP,
            failure_count = 0
        WHERE user_number = #{userNumber}
    </update>

    <!-- 全件取得 -->
    <select id="findAll" resultMap="userMap">
        SELECT
            u.user_id,
            u.user_number,
            u.user_name,
            u.hire_date,
            a.affiliation_name,
            u.role_class,
            u.sales_flg
        FROM users u
        INNER JOIN affiliations a
            ON u.affiliation_id = a.affiliation_id
        WHERE
            u.deleted_flg = '0'
        ORDER BY u.user_number
    </select>

    <!-- 検索 -->
    <select id="findBySearchForm" resultMap="userMap">
        SELECT
            u.user_id,
            u.user_number,
            u.user_name,
            u.hire_date,
            a.affiliation_name,
            u.role_class,
            u.sales_flg
        FROM users u
        INNER JOIN affiliations a
            ON u.affiliation_id = a.affiliation_id
        WHERE
            u.deleted_flg = '0'
        <if test='userName != "" and searchCondition == "0"'>
            AND u.user_name LIKE #{userName} || '%'
        </if>
        <if test='userName != "" and searchCondition == "1"'>
            AND u.user_name LIKE '%' || #{userName} || '%'
        </if>
        <if test='roleClass != ""'>
            AND u.role_class = #{roleClass}
        </if>
        ORDER BY u.user_number
    </select>

    <!-- 1件取得 -->
    <select id="findById" resultMap="userMap">
        SELECT
            u.user_id,
            u.user_number,
            u.user_name,
            u.user_name_kana,
            u.hire_date,
            a.affiliation_id,
            a.affiliation_name,
            u.role_class,
            u.sales_flg,
            u.birth_date,
            u.post_code,
            u.address,
            u.phone_number,
            u.email_address
        FROM users u
        INNER JOIN affiliations a
            ON u.affiliation_id = a.affiliation_id
        WHERE
            user_id = #{userId}
    </select>

    <!-- 1件排他ロック -->
    <select id="forLockById" resultMap="userMap">
        SELECT
            u.user_id,
            u.user_number,
            u.user_name,
            u.user_name_kana,
            u.hire_date,
            a.affiliation_id,
            a.affiliation_name,
            u.role_class,
            u.sales_flg,
            u.birth_date,
            u.post_code,
            u.address,
            u.phone_number,
            u.email_address,
            u.password
        FROM users u
        INNER JOIN affiliations a
            ON u.affiliation_id = a.affiliation_id
        WHERE
            user_id = #{userId}
        FOR UPDATE
    </select>

    <!-- 複数件排他ロック -->
    <select id="forLockByIdList" resultMap="userMap">
        SELECT
            u.user_id,
            u.user_number,
            u.user_name,
            u.user_name_kana,
            u.hire_date,
            a.affiliation_id,
            a.affiliation_name,
            u.role_class,
            u.sales_flg,
            u.birth_date,
            u.post_code,
            u.address,
            u.phone_number,
            u.email_address,
            u.password
        FROM users u
        INNER JOIN affiliations a
            ON u.affiliation_id = a.affiliation_id
        WHERE
            u.user_id IN
            <foreach item="item" index="index" collection="idList"
                open="(" separator="," close=")">
                #{item}
            </foreach>
        FOR UPDATE
    </select>

    <!-- マッピング -->
    <resultMap id="userMap" type="com.mailnaxx2.entity.Users">
        <result property="userId" column="user_id" />
        <result property="userNumber" column="user_number" />
        <result property="userName" column="user_name" />
        <result property="userNameKana" column="user_name_kana" />
        <result property="hireDate" column="hire_date" />
        <result property="roleClass" column="role_class" />
        <result property="salesFlg" column="sales_flg" />
        <result property="birthDate" column="birth_date" />
        <result property="postCode" column="post_code" />
        <result property="address" column="address" />
        <result property="phoneNumber" column="phone_number" />
        <result property="emailAddress" column="email_address" />
        <result property="password" column="password" />
        <result property="passChangedDate" column="pass_changed_date" />
        <result property="oldPassword" column="old_password" />
        <result property="failureCount" column="failure_count" />
        <result property="lastLoginDate" column="last_login_date" />
        <result property="deletedFlg" column="deleted_flg" />
        <result property="createdBy" column="created_by" />
        <result property="createdAt" column="created_at" />
        <result property="updatedBy" column="updated_by" />
        <result property="updatedAt" column="updated_at" />
        <association property="affiliation" resultMap="affiliationResult"/>
    </resultMap>

    <resultMap id="affiliationResult" type="com.mailnaxx2.entity.Affiliations">
        <result property="affiliationId" column="affiliation_id" />
        <result property="affiliationName" column="affiliation_name" />
    </resultMap>

    <!-- 営業担当取得 -->
    <select id="findBySales" resultType="com.mailnaxx2.entity.Users">
        SELECT * FROM users
        WHERE sales_flg = '1'
        AND deleted_flg = '0'
    </select>

    <!-- 登録 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users
        (
            user_number,
            user_name,
            user_name_kana,
            hire_date,
            affiliation_id,
            role_class,
            sales_flg,
            birth_date,
            post_code,
            address,
            phone_number,
            email_address,
            password,
            created_by,
            created_at
        )
        VALUES
        (
            #{userNumber},
            #{userName},
            #{userNameKana},
            #{hireDate},
            #{affiliation.affiliationId},
            #{roleClass},
            #{salesFlg},
            #{birthDate},
            #{postCode},
            #{address},
            #{phoneNumber},
            #{emailAddress},
            #{password},
            #{createdBy},
            CURRENT_TIMESTAMP
        )
    </insert>

    <!-- 更新 -->
    <update id="update">
        UPDATE users SET
            user_number = #{userNumber},
            user_name = #{userName},
            user_name_kana = #{userNameKana},
            hire_date = #{hireDate},
            affiliation_id = #{affiliation.affiliationId},
            role_class = #{roleClass},
            sales_flg = #{salesFlg},
            birth_date = #{birthDate},
            post_code = #{postCode},
            address = #{address},
            phone_number = #{phoneNumber},
            email_address = #{emailAddress},
            <if test="password != ''">
                password = #{password},
                pass_changed_date = #{passChangedDate},
                old_password = #{oldPassword},
            </if>
            updated_by = #{updatedBy},
            updated_at = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
    </update>

    <!-- 論理削除 -->
    <update id="delete">
        <foreach collection="userList" item="u" separator=";">
            UPDATE users SET
                deleted_flg = '1',
                updated_by = #{u.updatedBy},
                updated_at = CURRENT_TIMESTAMP
            WHERE
                user_id = #{u.userId}
        </foreach>
    </update>
</mapper>